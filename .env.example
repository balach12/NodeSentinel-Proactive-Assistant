NodeSentinel: Proactive Assistant for Bitcoin & Lightning Nodes
NodeSentinel is a resilient, Python-based Telegram assistant designed to proactively monitor the health of your remote Bitcoin/LND node, its hardware, and critical crypto market conditions. It leverages the Gemini AI API for stable, real-time contextual analysis on price movements.

üöÄ Key Features
Remote Hardware Monitoring: Checks CPU, RAM, Load Average, and Disks (/, /mnt/hdd) on your node via SSH.

Diagnostics & Remote Action: Secure commands (/diagnose, /restartlnd, /restartbtc) to manage services.

Proactive AI Surveillance:

Price Volatility: Alerts on significant price swings (e.g., $3000+ in 2 hours) and provides immediate, AI-generated contextual analysis.

On-Chain Fee Status: Notifies on changes in fee state (LOW, MEDIUM, HIGH).

Periodic Macro Report: Sends a sophisticated summary of critical macro/financial drivers every 24 hours.

üìã 1. Local Setup and Requirements
Follow these steps to set up the NodeSentinel application on your host machine (this can be a separate server or your main desktop):

Prerequisites
Python 3.8+

SSH Key Access: The user running this bot (e.g., ubuntu or admin) must have an SSH key configured to access the remote Bitcoin node without a password.

LND Credentials: You must copy your tls.cert and admin.macaroon files from your LND node to the local host machine running NodeSentinel. The paths in the .env file must point to these local copies.

Bitcoin-CLI Requirement (Critical)
The bot uses bitcoin-cli for Bitcoin Core monitoring.

If bot is LOCAL (running on the same machine as the Node): The binary is likely already configured.

If bot is REMOTE (running on a separate machine): You MUST install the bitcoin-cli binary on the bot's machine, or ensure the path specified in .env is correct.

Download: Refer to the official Bitcoin Core documentation for installation instructions on your host system.

Installation
Create and activate the virtual environment (venv):

python3 -m venv venv_nodesentinel
source venv_nodesentinel/bin/activate

Install all required dependencies:

pip install lndgrpc python-telegram-bot psutil python-dotenv httpx

(Note: Installing lndgrpc typically handles the necessary gRPC file generation.)

üîê 2. Configuration: The .env File
Create a file named .env in the project root directory. Copy the structure from the example file and fill in your actual credentials.

DO NOT COMMIT THE FINAL .env FILE TO GITHUB FOR SECURITY REASONS.

Variable

Must Point To...

Location

CERT_PATH

Your local copy of the tls.cert file.

Host machine running NodeSentinel

MACAROON_PATH

Your local copy of the admin.macaroon file.

Host machine running NodeSentinel

SSH_HOST

The IP Address of your Bitcoin/LND Node.

Remote Node

BITCOIN_CLI

Local path to the downloaded bitcoin-cli binary.

Host machine running NodeSentinel

Service Management (systemd)
For reliability, run NodeSentinel as a systemd service:

Step A: Create Service File
Create the service file (replace /home/ubuntu/lnd_credentials/ with your actual project path):

sudo nano /etc/systemd/system/nodesentinel.service

Paste the following configuration:

[Unit]
Description=NodeSentinel Telegram Bot (LND/BTC Monitoring)
After=network.target

[Service]
User=ubuntu
Group=ubuntu

WorkingDirectory=/home/ubuntu/lnd_credentials
ExecStart=/home/ubuntu/lnd_credentials/venv_nodesentinel/bin/python3 nodesentinel.py

Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target

Passo B: Load and Start
Execute the following commands to reload, start, and enable the service:

sudo systemctl daemon-reload
sudo systemctl enable nodesentinel
sudo systemctl start nodesentinel
sudo systemctl status nodesentinel 

The service should report Active: active (running).

üåü 4. Contributions and Donations
If this project has been useful to you, support is always welcome!

Every donation is highly appreciated and helps keep the assistant alive and updated.

Lightning: davidebtc@walletofsatoshi.com

Bitcoin On-Chain: bc1qqksvzgksjgmffmggyg836h45le3d5aq5d5xqj0
